stages:
  - test
  - build
  - package

variables:
  NODE_VERSION: "18"
  CACHE_KEY: "${CI_COMMIT_REF_SLUG}-node-modules"

.node_template: &node_template
  image: node:${NODE_VERSION}-alpine
  cache:
    key: $CACHE_KEY
    paths:
      - node_modules/
      - .npm/
  before_script:
    - npm ci --cache .npm --prefer-offline

# Test stage
lint:
  <<: *node_template
  stage: test
  script:
    - npm run lint
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test:
  <<: *node_template
  stage: test
  script:
    - npm run test
    - npm run test:coverage
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    paths:
      - coverage/
    expire_in: 30 days
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

type_check:
  <<: *node_template
  stage: test
  script:
    - npm run type-check
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Build stage
build:
  <<: *node_template
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
      - lib/
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Package stage
package:
  <<: *node_template
  stage: package
  dependencies:
    - build
  script:
    - npm pack
  artifacts:
    paths:
      - "*.tgz"
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_TAG

# Security and quality checks
security_scan:
  <<: *node_template
  stage: test
  script:
    - npm audit --audit-level moderate
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Deploy to npm (only on tags)
deploy_npm:
  <<: *node_template
  stage: package
  dependencies:
    - build
  script:
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
    - npm publish
  rules:
    - if: $CI_COMMIT_TAG
  when: manual
